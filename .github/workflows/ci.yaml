name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # fetch-depth: 0 is crucial for setuptools-scm to find the git history
        fetch-depth: 0

    - name: Install dependencies
      run: |
        # Step 1: Explicitly install the project's build dependencies first.
        # This ensures 'setuptools-scm' is in the main environment.
        pip install "setuptools-scm[toml]>=6.2"

        # Step 2: Install your runtime and test dependencies from requirements.txt.
        pip install -r requirements.txt

        # Step 3: Install the project in editable mode, telling pip NOT to use
        # a separate build environment. This forces it to use the 'setuptools-scm'
        # we just installed, which can correctly see the .git folder.
        pip install --no-build-isolation -e .

    - name: "Run test: validate edge cloud clients instantiation"
      run: pytest -v tests/common/test_invoke_edgecloud_clients.py

    - name: "Run test: validate network clients instantiation"
      run: pytest -v tests/common/test_invoke_network_clients.py

  lint:
    name: Run linters
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: isort check
      run: isort src tests --check --profile black --filter-files

    - name: black check
      run: black src tests --check --line-length=100

    - name: flake8 check
      run: flake8 src tests

  publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    # This job only runs when a release is published on GitHub
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [tests, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # fetch-depth: 0 makes setuptools-scm find the release tag
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install build and upload dependencies
      run: |
        pip install build twine

    - name: Build the package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
